name: Test Suite

on:
  pull_request:
    branches: [master]
  push:

jobs:
  smoke-tests:
    name: ${{ matrix.os }} - ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    env:
      POETRY_VIRTUALENVS_CREATE: false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install poetry
        shell: bash
        run: python -m pip install poetry

      - name: Install
        run: poetry install

      - name: Run pytest
        shell: bash
        run: |
           python -m pytest  -m "not slow"

  full-tests:
    name: Full Test - Python 3.9
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
      PYTEST_ADDOPTS: "--color=yes"
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Get full python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install poetry
        shell: bash
        run: python -m pip install poetry

      - name: Install
        run: poetry install

      - name: Run pytest
        shell: bash
        run: |
           python -m pytest

      - uses: codecov/codecov-action@v1
        if: always()
        with:
          file: ./.coverage/coverage.xml
